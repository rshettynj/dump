{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates an Amazon API gateway from swagger body --Roshan",
 "Parameters":{
    "apititle": {
      "Type": "String",
      "Default": "noname1"
    },
    "domainname": {
      "Type": "String",
      "Default": "noname2"
    }
 },
  "Resources": {
   "RestApi": {
    "Type" : "AWS::ApiGateway::RestApi",
    "Properties": {
    "Body" : {
"swagger": "2.0",
  "info": {
    "version": "2018-07-19T19:43:44Z",
    "title": {"Ref":"apititle"}
  },
  "host": "noname",
  "basePath": "/nopath",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{vertical}/{EditorialId}/{FilingId}": {
      "post": {
        "consumes": [
          "application/xml",
          "application/json",
          "text/html"
        ],
        "produces": [
          "application/xml",
          "application/json",
          "text/html"
        ],
        "parameters": [
          {
            "name": "EditorialId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "FilingId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vertical",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "201 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::720322524327:role/dnegwcontentrole",
          "uri": "arn:aws:apigateway:us-east-1:sns:path/{topicname}",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "requestTemplates": {
            "application/xml": "#set( $monthmap = {\"Jan\" : \"01\", \"Feb\" : \"02\", \"Mar\" : \"03\", \"Apr\" : \"04\", \"May\" : \"05\", \"Jun\" : \"06\", \"Jul\" : \"07\", \"Aug\" : \"08\", \"Sep\" : \"09\", \"Oct\" : \"10\", \"Nov\" : \"11\", \"Dec\" : \"12\"})\n#set( $newdate = $context.requestTime )\n#set( $s2 = $newdate.split(\"/\"))\n#set( $s1 = $newdate.split(\":\"))\n#set( $day = $s2.get(0))\n#set( $month = $s2.get(1))\n#set( $year1 = $s1.get(0))\n#set( $s3 = $year1.split(\"/\"))\n#set( $year = $s3.get(2))\n#set( $hour = $s1.get(1))\n#set( $minute = $s1.get(2))\n#set( $second1 = $s1.get(3))\n#set( $second2 = $second1.split(\" \"))\n#set( $second = $second2.get(0))\n#set( $monthout = $monthmap.get(\"$month\"))\n#set( $cp = $context.path)\n#set( $cpstage = $cp.split(\"/\"))\n#set( $cppath = $cpstage.get(2))\n#set( $eid = $cpstage.get(3))\n#set( $fid = $cpstage.get(4))\n#set( $TopicArn1 = $util.urlEncode(\"arn:aws:sns:us-east-1:720322524327:${cppath}\"))\n#set( $messageb = \"<feed xmlns=\"\"http://www.w3.org/2005/Atom\"\">\n  <title type=\"\"text\"\">${cppath} feed</title>\n  <id>urn:docs:ap.org,2018-07-10:${eid}</id>\n  <link rel=\"\"self\"\" href=\"\"http://ap-dne-cmsapi-logs.s3.amazonaws.com/${eid}\"\" />\n  <updated>${year}-${monthout}-${day}T${hour}:${minute}:${second}.000Z</updated>\n  <author>\n    <name>00000000000000000000000000000000</name>\n  </author>\n  <entry>\n    <id>urn:docs:ap.org,2018-07-10:${eid},${fid}</id>\n    <title type=\"\"text\"\">Item:${eid}, Version:${fid}</title>\n    <updated>${year}-${monthout}-${day}T${hour}:${minute}:${second}.000Z</updated>\n    <link rel=\"\"alternate\"\" href=\"\"http://catalogapiqa.ap.org/AP.MessageRepository.APIHost/Services/MessageRepository.svc/documents/${eid}/versions/${fid}\"\" />\n  </entry>\n</feed>\")\n#set( $messagec = $util.urlEncode($messageb))\nAction=Publish&TopicArn=$TopicArn1&Message=$messagec",
            "text/html": "#set( $monthmap = {\"Jan\" : \"01\", \"Feb\" : \"02\", \"Mar\" : \"03\", \"Apr\" : \"04\", \"May\" : \"05\", \"Jun\" : \"06\", \"Jul\" : \"07\", \"Aug\" : \"08\", \"Sep\" : \"09\", \"Oct\" : \"10\", \"Nov\" : \"11\", \"Dec\" : \"12\"})\n#set( $newdate = $context.requestTime )\n#set( $s2 = $newdate.split(\"/\"))\n#set( $s1 = $newdate.split(\":\"))\n#set( $day = $s2.get(0))\n#set( $month = $s2.get(1))\n#set( $year1 = $s1.get(0))\n#set( $s3 = $year1.split(\"/\"))\n#set( $year = $s3.get(2))\n#set( $hour = $s1.get(1))\n#set( $minute = $s1.get(2))\n#set( $second1 = $s1.get(3))\n#set( $second2 = $second1.split(\" \"))\n#set( $second = $second2.get(0))\n#set( $monthout = $monthmap.get(\"$month\"))\n#set( $cp = $context.path)\n#set( $cpstage = $cp.split(\"/\"))\n#set( $cppath = $cpstage.get(2))\n#set( $eid = $cpstage.get(3))\n#set( $fid = $cpstage.get(4))\n#set( $TopicArn1 = $util.urlEncode(\"arn:aws:sns:us-east-1:720322524327:${cppath}\"))\n#set( $messageb = \"<feed xmlns=\"\"http://www.w3.org/2005/Atom\"\">\n  <title type=\"\"text\"\">${cppath} feed</title>\n  <id>urn:docs:ap.org,2018-07-10:${eid}</id>\n  <link rel=\"\"self\"\" href=\"\"http://ap-dne-cmsapi-logs.s3.amazonaws.com/${eid}\"\" />\n  <updated>${year}-${monthout}-${day}T${hour}:${minute}:${second}.000Z</updated>\n  <author>\n    <name>00000000000000000000000000000000</name>\n  </author>\n  <entry>\n    <id>urn:docs:ap.org,2018-07-10:${eid},${fid}</id>\n    <title type=\"\"text\"\">Item:${eid}, Version:${fid}</title>\n    <updated>${year}-${monthout}-${day}T${hour}:${minute}:${second}.000Z</updated>\n    <link rel=\"\"alternate\"\" href=\"\"http://catalogapiqa.ap.org/AP.MessageRepository.APIHost/Services/MessageRepository.svc/documents/${eid}/versions/${fid}\"\" />\n  </entry>\n</feed>\")\n#set( $messagec = $util.urlEncode($messageb))\nAction=Publish&TopicArn=$TopicArn1&Message=$messagec",
            "application/json": "#set( $monthmap = {\"Jan\" : \"01\", \"Feb\" : \"02\", \"Mar\" : \"03\", \"Apr\" : \"04\", \"May\" : \"05\", \"Jun\" : \"06\", \"Jul\" : \"07\", \"Aug\" : \"08\", \"Sep\" : \"09\", \"Oct\" : \"10\", \"Nov\" : \"11\", \"Dec\" : \"12\"})\n#set( $newdate = $context.requestTime )\n#set( $s2 = $newdate.split(\"/\"))\n#set( $s1 = $newdate.split(\":\"))\n#set( $day = $s2.get(0))\n#set( $month = $s2.get(1))\n#set( $year1 = $s1.get(0))\n#set( $s3 = $year1.split(\"/\"))\n#set( $year = $s3.get(2))\n#set( $hour = $s1.get(1))\n#set( $minute = $s1.get(2))\n#set( $second1 = $s1.get(3))\n#set( $second2 = $second1.split(\" \"))\n#set( $second = $second2.get(0))\n#set( $monthout = $monthmap.get(\"$month\"))\n#set( $cp = $context.path)\n#set( $cpstage = $cp.split(\"/\"))\n#set( $cppath = $cpstage.get(2))\n#set( $eid = $cpstage.get(3))\n#set( $fid = $cpstage.get(4))\n#set( $TopicArn1 = $util.urlEncode(\"arn:aws:sns:us-east-1:720322524327:${cppath}\"))\n#set( $messageb = \"<feed xmlns=\"\"http://www.w3.org/2005/Atom\"\">\n  <title type=\"\"text\"\">${cppath} feed</title>\n  <id>urn:docs:ap.org,2018-07-10:${eid}</id>\n  <link rel=\"\"self\"\" href=\"\"http://ap-dne-cmsapi-logs.s3.amazonaws.com/${eid}\"\" />\n  <updated>${year}-${monthout}-${day}T${hour}:${minute}:${second}.000Z</updated>\n  <author>\n    <name>00000000000000000000000000000000</name>\n  </author>\n  <entry>\n    <id>urn:docs:ap.org,2018-07-10:${eid},${fid}</id>\n    <title type=\"\"text\"\">Item:${eid}, Version:${fid}</title>\n    <updated>${year}-${monthout}-${day}T${hour}:${minute}:${second}.000Z</updated>\n    <link rel=\"\"alternate\"\" href=\"\"http://catalogapiqa.ap.org/AP.MessageRepository.APIHost/Services/MessageRepository.svc/documents/${eid}/versions/${fid}\"\" />\n  </entry>\n</feed>\")\n#set( $messagec = $util.urlEncode($messageb))\nAction=Publish&TopicArn=$TopicArn1&Message=$messagec"
          },
          "requestParameters": {
            "integration.request.path.FilingId": "method.request.path.FilingId",
            "integration.request.path.EditorialId": "method.request.path.EditorialId",
            "integration.request.path.topicname": "method.request.path.vertical",
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    }
  },
  "definitions": {
    "Empty": {
      "type": "object",
      "title": "Empty Schema"
    }
  }
}
}
},
"Deployment1": {
"Type" : "AWS::ApiGateway::Deployment",
"DependsOn": "RestApi",
"Properties": {
        "Description": "DNE content gateway deployment",
        "RestApiId": { "Ref": "RestApi" },
        "StageName": "nonprod",
        "StageDescription": {
         "LoggingLevel": "INFO",
         "ThrottlingRateLimit": 100,
         "ThrottlingBurstLimit": 50
         },
        "StageName": "nonprod"
}
},
"Deployment2": {
"Type" : "AWS::ApiGateway::Deployment",
"DependsOn": "RestApi",
"Properties": {
        "Description": "DNE content gateway testing deployment",
        "RestApiId": { "Ref": "RestApi" },
        "StageDescription": {
         "LoggingLevel": "INFO",
         "ThrottlingRateLimit": 100,
         "ThrottlingBurstLimit": 50
         },
        "StageName": "testing"
}
},
"DomainName": {
"Type": "AWS::ApiGateway::DomainName",
"DependsOn": [ "Deployment1", "Deployment2" ],
"Properties": {
        "DomainName": {"Ref":"domainname"},
        "RegionalCertificateArn": "arn:aws:acm:us-east-1:720322524327:certificate/1cba08e2-23fa-4bd0-8b3d-26da1375292c",
        "EndpointConfiguration": {"Types" : [ "REGIONAL" ]}
}
},
"BasePathMapping1": {
"Type": "AWS::ApiGateway::BasePathMapping",
"DependsOn": "DomainName",
"Properties": {
        "BasePath" : "nonprod",
        "DomainName": {"Ref": "DomainName"},
        "RestApiId": { "Ref": "RestApi" },
        "Stage": "nonprod"
}
},
"BasePathMapping2": {
"Type": "AWS::ApiGateway::BasePathMapping",
"DependsOn": "DomainName",
"Properties": {
        "BasePath" : "testing",
        "DomainName": {"Ref": "DomainName"},
        "RestApiId": { "Ref": "RestApi" },
        "Stage": "testing"
}
}
}
}
